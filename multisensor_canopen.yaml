#####################################################################################################
##### MULTISENSOR CAN ESPHOME created by Jarn - https://github.com/jarn78/esphome_multisensor   #####
##### v0.1                                                                                      #####
#####################################################################################################

substitutions:
  ##############################
  ## Change only in your      ##
  ## local yaml substitutions ##
#  device_name: "multisensor"
  name: ${device_name}
  friendly_name: ${device_name}
  ota_password: ${wifi_password}
#  node_id: 1
external_components:
  - source: github://mrk-its/esphome-canopen
esphome:
  name: "${name}"
  friendly_name: $(friendly_name)
  min_version: 2024.6.0
  project:
    name: "esphome.Multisensor_canopen"
    version: "0.1"
esp32:
  board: esp32dev
  framework:
    type: arduino
wifi:
  id: wifi_component
  power_save_mode: LIGHT
  networks:
    - id: wifi_default
      ssid: ${wifi_ssid}
      password: ${wifi_password}
ota:
  - id: ota_std
    platform: esphome
    password: ${ota_password}
logger:
  id: logger_std
  baud_rate: 0
i2s_audio:
  i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO33
microphone:
  - platform: i2s_audio
    id: echo_microphone
    i2s_din_pin: GPIO32
    adc_type: external
    pdm: false
voice_assistant:
  microphone: echo_microphone
  id: va
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          #- script.execute: reset_led
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          #- light.turn_off: led
switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      #- script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      #- script.execute: reset_led
i2c:
  - id: sensors
    frequency: 100k
    scl: GPIO22
    sda: GPIO21
sensor:
  - platform: veml7700
    i2c_id: sensors
    address: 0x10
    update_interval: 60s
    # short variant of sensor definition:
    ambient_light: 
      name: "Ambient light"
      id: ambient_light
    # longer variant of sensor definition:
    actual_gain:
      name: "Actual gain"
      id: gain
  - platform: htu21d
    i2c_id: sensors
    model: htu21d
    temperature:
      name: "Temperature"
      id: temperature
    humidity:
      name: "Humidity"
      id: humidity
    heater:
      name: "Heater"
      id: heater
output:
  - platform: gpio
    pin: GPIO26
    id: pin_LED
  - platform: gpio
    pin: GPIO27
    id: pin_OUT 
light:
  - platform: binary
    name: "LED"
    id: led
    output: pin_LED
  - platform: binary
    name: "OUT"
    id: out
    output: pin_OUT
canbus:
  - platform: esp32_can
    id: can_bus
    rx_pin: GPIO18
    tx_pin: GPIO19
    can_id: 0
    bit_rate: 125kbps
canopen:
  id: can_gate
  canbus_id: can_bus
  node_id: $(node_id)
  entities:
    - id: temperature
      index: 1
      tpdo: 0
      size: 1
      min: 0
      max: 50
    - id: humidity
      index: 2
      tpdo: 0
      size: 1
      min: 0
      max: 100
    - id: heater
      index: 3
      tpdo: 0
    - id: out
      index: 4
      tpdo: 0    
    - id: led
      index: 5
      tpdo: 0
    - id: ambient_light
      index: 6
      tpdo: 0
    - id: gain
      index: 7
      tpdo: 0

